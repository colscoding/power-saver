let e,t,n,o,a,r,l,c,s,i,d,u;const m="powerMeterSession";function g(e){try{let t={timestamp:Date.now(),powerData:e.powerData,heartData:e.heartData,cadenceData:e.cadenceData,rawPowerMeasurements:e.rawPowerMeasurements,powerReadings:e.getPowerReadings(),powerAverages:e.getPowerAverages(),lastPowerValue:e.lastPowerValue,lastHeartRateValue:e.lastHeartRateValue,lastCadenceValue:e.lastCadenceValue,sessionStartTime:e.sessionStartTime};localStorage.setItem(m,JSON.stringify(t))}catch(e){console.warn("Failed to save session data:",e)}}function p(){localStorage.removeItem(m)}let f=[],y={"10s":{current:0,best:0},"30s":{current:0,best:0},"1m":{current:0,best:0},"2m":{current:0,best:0},"4m":{current:0,best:0},"8m":{current:0,best:0}};function h(){e&&(e.textContent=y["10s"].current||"--",t.textContent=y["10s"].best||"--",n.textContent=y["30s"].current||"--",o.textContent=y["30s"].best||"--",a.textContent=y["1m"].current||"--",r.textContent=y["1m"].best||"--",l.textContent=y["2m"].current||"--",c.textContent=y["2m"].best||"--",s.textContent=y["4m"].current||"--",i.textContent=y["4m"].best||"--",d.textContent=y["8m"].current||"--",u.textContent=y["8m"].best||"--")}function v(){for(let e of(f=[],Object.keys(y)))y[e].current=0,y[e].best=0;h()}const w={powerValueElement:null,hrValueElement:null,cadenceValueElement:null,deviceNameElement:null,hrDeviceName:null,cadenceDeviceName:null,statusText:null,hrStatusText:null,cadenceStatusText:null,hrConnectionStatus:null,cadenceConnectionStatus:null,powerMeterConnectButton:null,hrConnectButton:null,speedCadenceConnectButton:null,exportButtons:{json:null,csv:null,tcx:null,rawJson:null,rawCsv:null,image:null,clearSession:null},toggleConnectSection:null,toggleExportSection:null,connectSection:null,exportSection:null,powerAveragesSection:null,connectToggleText:null,exportToggleText:null,hamburgerBtn:null,menuDropdown:null,powerAveragesToggle:null,powerMetricToggle:null,heartRateMetricToggle:null,cadenceMetricToggle:null,connectSectionToggle:null,exportSectionToggle:null,showInfoMenuItem:null,showQrCodeMenuItem:null,spyModeToggle:null,powerCard:null,heartRateCard:null,cadenceCard:null,spyCard:null,spyModeSection:null,spyValueElement:null,spyStatusElement:null,spyInstructionsElement:null};function x(e){if(!w.powerValueElement)return;let t=e||"--";w.powerValueElement.textContent=t,w.powerValueElement.setAttribute("data-value",t)}function S(){x("--"),w.hrValueElement&&(w.hrValueElement.textContent="--"),w.cadenceValueElement&&(w.cadenceValueElement.textContent="--")}function C(){let e=new Date,t=e.getFullYear(),n=String(e.getMonth()+1).padStart(2,"0"),o=String(e.getDate()).padStart(2,"0");return`${t}-${n}-${o}`}async function E(){if("wakeLock"in navigator)try{(await navigator.wakeLock.request("screen")).addEventListener("release",()=>{console.log("Wake lock was released")})}catch(e){console.error(`${e.name}, ${e.message}`)}}const b="cycling_power",T="cycling_power_measurement",B="cycling_speed_and_cadence";let L=null,M=null,I=null,D=null,k=0,A=0,R=null;async function P(e,t){if(await E(),!navigator.bluetooth)return void e.onStatusUpdate("Web Bluetooth API is not available.");try{e.onStatusUpdate("Scanning for power meters..."),L=await navigator.bluetooth.requestDevice({filters:[{services:[b]}]}),e.onStatusUpdate("Connecting to device..."),t.deviceNameElement&&(t.deviceNameElement.textContent=`Device: ${L.name||"Unknown Device"}`),L.addEventListener("gattserverdisconnected",()=>{_(e,t)});let n=await L.gatt.connect(),o=await n.getPrimaryService(b),a=await o.getCharacteristic(T);try{let e=await o.getCharacteristic("cycling_power_feature");await e.readValue()}catch{}return await a.startNotifications(),a.addEventListener("characteristicvaluechanged",t=>{var n=t,o=e;let a=n.target.value,r={timestamp:Date.now(),flags:a.getUint16(0,!0),rawBytes:Array.from(new Uint8Array(a.buffer)).map(e=>e.toString(16).padStart(2,"0")).join(" "),dataLength:a.byteLength};a.getUint16(0,!0);let l=a.getInt16(2,!0);r.instantaneousPower=l,o.onPowerMeasurement(l,r)}),e.onStatusUpdate("Connected and receiving data!"),t.powerMeterConnectButton&&(t.powerMeterConnectButton.disabled=!0),!0}catch(n){return e.onStatusUpdate(`Error: ${n.message}`),console.error("Connection failed:",n),L&&L.removeEventListener("gattserverdisconnected",()=>{_(e,t)}),!1}}async function $(e,t){if(await E(),!navigator.bluetooth)return void e.onStatusUpdate("Web Bluetooth API is not available.");try{e.onStatusUpdate("Scanning for devices..."),t.hrConnectionStatus&&(t.hrConnectionStatus.textContent="Connecting..."),M=await navigator.bluetooth.requestDevice({filters:[{services:["heart_rate"]}]}),e.onStatusUpdate("Connecting to device..."),t.hrDeviceName&&(t.hrDeviceName.textContent=`Device: ${M.name}`),M.addEventListener("gattserverdisconnected",()=>{var n,o;n=e,o=t,n.onStatusUpdate("Device disconnected."),o.hrConnectionStatus&&(o.hrConnectionStatus.textContent="Disconnected"),o.hrDeviceName&&(o.hrDeviceName.textContent=""),o.hrConnectButton&&(o.hrConnectButton.disabled=!1),M=null,n.onHeartRateChange(0)});let n=await M.gatt.connect(),o=await n.getPrimaryService("heart_rate"),a=await o.getCharacteristic("heart_rate_measurement");return await a.startNotifications(),a.addEventListener("characteristicvaluechanged",t=>{var n=t,o=e;let a=function(e){let t=e.getUint8(0);return 1&t?e.getUint16(1,!0):e.getUint8(1)}(n.target.value);o.onHeartRateChange(a)}),e.onStatusUpdate("Connected!"),t.hrConnectionStatus&&(t.hrConnectionStatus.textContent="Connected"),t.hrConnectButton&&(t.hrConnectButton.disabled=!0),!0}catch(n){return e.onStatusUpdate(`Error: ${n.message}`),t.hrConnectionStatus&&(t.hrConnectionStatus.textContent="Connection Failed"),console.error("Connection failed:",n),!1}}async function V(e,t){if(await E(),!navigator.bluetooth)return void e.onStatusUpdate("Web Bluetooth API is not available.");try{e.onStatusUpdate("Scanning for sensors..."),t.cadenceConnectionStatus&&(t.cadenceConnectionStatus.textContent="Connecting..."),R&&(clearTimeout(R),R=null),k=0,A=0,I=await navigator.bluetooth.requestDevice({filters:[{services:[B]}]}),e.onStatusUpdate("Connecting to device..."),t.cadenceDeviceName&&(t.cadenceDeviceName.textContent=`Device: ${I.name}`),I.addEventListener("gattserverdisconnected",()=>{var n,o;n=e,o=t,n.onStatusUpdate("Device disconnected."),o.cadenceConnectionStatus&&(o.cadenceConnectionStatus.textContent="Disconnected"),o.cadenceDeviceName&&(o.cadenceDeviceName.textContent=""),o.speedCadenceConnectButton&&(o.speedCadenceConnectButton.disabled=!1),I=null,n.onCadenceChange(0),R&&(clearTimeout(R),R=null),k=0,A=0});let n=await I.gatt.connect(),o=await n.getPrimaryService(B),a=await o.getCharacteristic("csc_measurement");return await a.startNotifications(),a.addEventListener("characteristicvaluechanged",t=>{!function(e,t){let n=e.target.value,o=n.getUint8(0),a=1;if(1&o&&(a+=6),2&o){let e=n.getUint16(a,!0),o=n.getUint16(a+2,!0);if(k>0){let n=e-k,a=(o-A)/1024;if(a>0){let e=Math.round(n/a*60);t.onCadenceChange(e),R&&clearTimeout(R),R=setTimeout(()=>{t.onCadenceChange(0),R=null},3e3)}}k=e,A=o}}(t,e)}),e.onStatusUpdate("Connected!"),t.cadenceConnectionStatus&&(t.cadenceConnectionStatus.textContent="Connected"),t.speedCadenceConnectButton&&(t.speedCadenceConnectButton.disabled=!0),!0}catch(n){return e.onStatusUpdate(`Error: ${n.message}`),t.cadenceConnectionStatus&&(t.cadenceConnectionStatus.textContent="Connection Failed"),console.error("Speed/Cadence connection failed:",n),!1}}async function N(e,t){if(!navigator.bluetooth)return void console.error("Web Bluetooth API is not available.");try{t.spyInstructionsElement&&(t.spyInstructionsElement.style.display="none"),t.spyStatusElement&&(t.spyStatusElement.textContent="Scanning for spy power meter...",t.spyStatusElement.style.display="block"),D=await navigator.bluetooth.requestDevice({filters:[{services:[b]}]}),t.spyStatusElement&&(t.spyStatusElement.textContent="Connecting to spy device..."),D.addEventListener("gattserverdisconnected",()=>{q(t)});let e=await D.gatt.connect(),n=await e.getPrimaryService(b),o=await n.getCharacteristic(T);return await o.startNotifications(),o.addEventListener("characteristicvaluechanged",e=>{var n=e,o=t;let a=new Uint8Array(n.target.value.buffer),r=0;a.length>=4&&(r=a[2]+(a[3]<<8)),o.spyValueElement&&(o.spyValueElement.textContent=r)}),t.spyStatusElement&&(t.spyStatusElement.textContent="Spy connected!",t.spyStatusElement.style.display="none"),!0}catch(e){return t.spyStatusElement&&(t.spyStatusElement.textContent=`Spy Error: ${e.message}`),console.error("Spy connection failed:",e),D&&(D.removeEventListener("gattserverdisconnected",()=>{q(t)}),D=null),setTimeout(()=>{t.spyStatusElement&&(t.spyStatusElement.style.display="none"),t.spyInstructionsElement&&(t.spyInstructionsElement.style.display="block")},3e3),!1}}function U(e){D&&D.gatt.connected&&D.gatt.disconnect(),D=null,e.spyValueElement&&(e.spyValueElement.textContent="--"),e.spyStatusElement&&(e.spyStatusElement.style.display="none"),e.spyInstructionsElement&&(e.spyInstructionsElement.style.display="block")}function _(e,t){e.onStatusUpdate("Device disconnected."),t.deviceNameElement&&(t.deviceNameElement.textContent=""),t.powerMeterConnectButton&&(t.powerMeterConnectButton.disabled=!1),L&&(L.removeEventListener("gattserverdisconnected",()=>{_(e,t)}),L=null),e.onDisconnected()}function q(e){D=null,e.spyValueElement&&(e.spyValueElement.textContent="--"),e.spyStatusElement&&(e.spyStatusElement.textContent="Spy disconnected",e.spyStatusElement.style.display="block"),setTimeout(()=>{e.spyStatusElement&&(e.spyStatusElement.style.display="none"),e.spyInstructionsElement&&(e.spyInstructionsElement.style.display="block")},3e3)}function F(e){let t={time:e=>`<Time>${new Date(e).toISOString()}</Time>`,heartRate:e=>`
<HeartRateBpm>
  <Value>${e}</Value>
</HeartRateBpm>
            `.trim(),cadence:e=>`<Cadence>${e}</Cadence>`,power:e=>`
<Extensions>
  <ns2:TPX>
    <ns2:Watts>${e}</ns2:Watts>
  </ns2:TPX>
</Extensions>
            `.trim()},n=Object.keys(t).map(n=>void 0===e[n]?"":t[n](e[n])).filter(e=>e).join("\n");return`
<Trackpoint>
  ${n}
</Trackpoint>
`.trim()}async function H({dataPoints:e,powerAverages:t}){let n=e.filter(e=>void 0!==e.heartRate),o=e.filter(e=>void 0!==e.cadence),a=e.filter(e=>void 0!==e.power),r=document.createElement("canvas"),l=r.getContext("2d"),c=200;Object.values(t).some(e=>e.current>0||e.best>0)&&(c+=200),n.length>0&&n.some(e=>e.heartRate>0)&&(c+=140),o.length>0&&o.some(e=>e.cadence>0)&&(c+=140),a.length>0&&(c+=350),n.length>0&&(c+=350),o.length>0&&(c+=350);let s=Math.max(600,c);r.width=1200,r.height=s,l.fillStyle="#1a1a2e",l.fillRect(0,0,1200,s),l.fillStyle="#ffffff",l.font="bold 36px Arial, sans-serif",l.textAlign="center",l.fillText("Power Meter Summary",600,50),l.font="18px Arial, sans-serif",l.fillStyle="#cccccc";let i=new Date;if(l.fillText(i.toLocaleDateString()+" "+i.toLocaleTimeString(),600,80),a.length>0){let e=Math.round(Math.round((a[a.length-1].timestamp-a[0].timestamp)/1e3)/60);l.fillText(`Session Duration: ${e} minutes`,600,105)}let d=130;if(Object.values(t).some(e=>e.current>0||e.best>0)){l.fillStyle="#ffffff",l.font="bold 24px Arial, sans-serif",l.textAlign="left",l.fillText("Power Averages",50,d),d+=40;let e=[{label:"10s",data:t["10s"]},{label:"30s",data:t["30s"]},{label:"1m",data:t["1m"]},{label:"2m",data:t["2m"]},{label:"4m",data:t["4m"]},{label:"8m",data:t["8m"]}];l.font="16px Arial, sans-serif",l.fillStyle="#cccccc",l.fillText("Duration",70,d),l.fillText("Best",220,d),l.fillText("Duration",470,d),l.fillText("Best",620,d),d+=30;for(let t=0;t<e.length;t++){let n=e[t],o=t<3?70:470,a=d+25*(t<3?t:t-3);l.fillStyle="#ffffff",l.fillText(n.label,o,a),l.fillStyle=n.data.best>0?"#e74c3c":"#666666",l.fillText(n.data.best+"W",o+150,a)}d+=100}if(n.length>0){let e=n.map(e=>e.heartRate).filter(e=>e>0);if(e.length>0){l.fillStyle="#ffffff",l.font="bold 24px Arial, sans-serif",l.textAlign="left",l.fillText("Heart Rate Statistics",50,d),d+=40;let t=Math.max(...e),n=Math.min(...e),o=Math.round(e.reduce((e,t)=>e+t,0)/e.length);l.font="16px Arial, sans-serif",l.fillStyle="#cccccc",l.fillText("Average:",70,d),l.fillStyle="#e74c3c",l.fillText(`${o} BPM`,200,d),d+=25,l.fillStyle="#cccccc",l.fillText("Maximum:",70,d),l.fillStyle="#e74c3c",l.fillText(`${t} BPM`,200,d),d+=25,l.fillStyle="#cccccc",l.fillText("Minimum:",70,d),l.fillStyle="#e74c3c",l.fillText(`${n} BPM`,200,d),d+=40}}if(o.length>0){let e=o.map(e=>e.cadence).filter(e=>e>0);if(e.length>0){l.fillStyle="#ffffff",l.font="bold 24px Arial, sans-serif",l.textAlign="left",l.fillText("Cadence Statistics",50,d),d+=40;let t=Math.max(...e),n=Math.min(...e),o=Math.round(e.reduce((e,t)=>e+t,0)/e.length);l.font="16px Arial, sans-serif",l.fillStyle="#cccccc",l.fillText("Average:",70,d),l.fillStyle="#f39c12",l.fillText(`${o} RPM`,200,d),d+=25,l.fillStyle="#cccccc",l.fillText("Maximum:",70,d),l.fillStyle="#f39c12",l.fillText(`${t} RPM`,200,d),d+=25,l.fillStyle="#cccccc",l.fillText("Minimum:",70,d),l.fillStyle="#f39c12",l.fillText(`${n} RPM`,200,d),d+=40}}return a.length>0||n.length>0||o.length>0?(a.length>0&&(d+=20,l.fillStyle="#ffffff",l.font="bold 20px Arial, sans-serif",l.fillText("Power Timeline",50,d),j(l,a,"power",50,d+=30,1100,300,"#3498db","W"),d+=350),n.length>0&&(l.fillStyle="#ffffff",l.font="bold 20px Arial, sans-serif",l.fillText("Heart Rate Timeline",50,d),j(l,n,"heartRate",50,d+=30,1100,300,"#e74c3c","BPM"),d+=350),o.length>0&&(l.fillStyle="#ffffff",l.font="bold 20px Arial, sans-serif",l.fillText("Cadence Timeline",50,d),j(l,o,"cadence",50,d+=30,1100,300,"#f39c12","RPM"),d+=350),r):(l.fillStyle="#cccccc",l.font="24px Arial, sans-serif",l.textAlign="center",l.fillText("No data recorded yet",600,s/2),l.font="16px Arial, sans-serif",l.fillText("Start recording to see your activity summary",600,s/2+40),r)}function j(e,t,n,o,a,r,l,c,s){if(0===t.length)return;e.fillStyle="rgba(255, 255, 255, 0.05)",e.fillRect(o,a,r,l),e.strokeStyle="rgba(255, 255, 255, 0.2)",e.lineWidth=1,e.strokeRect(o,a,r,l);let i=t.map(e=>e[n]).filter(e=>e>0);if(0===i.length)return;let d=Math.min(...i),u=Math.max(...i),m=u-d||1;e.fillStyle="#cccccc",e.font="12px Arial, sans-serif",e.textAlign="right";for(let t=0;t<=4;t++){let n=Math.round(d+m*t/4),r=a+l-l*t/4;e.fillText(n+s,o-10,r+4)}e.strokeStyle=c,e.lineWidth=2,e.beginPath();let g=!0;for(let c=0;c<t.length;c++){let s=t[c][n];if(s>0){let n=o+c/(t.length-1)*r,i=a+l-(s-d)/m*l;g?(e.moveTo(n,i),g=!1):e.lineTo(n,i)}}e.stroke(),e.fillStyle=c;for(let c=0;c<t.length;c+=Math.max(1,Math.floor(t.length/50))){let s=t[c][n];if(s>0){let n=o+c/(t.length-1)*r,i=a+l-(s-d)/m*l;e.beginPath(),e.arc(n,i,3,0,2*Math.PI),e.fill()}}e.strokeStyle="rgba(255, 255, 255, 0.1)",e.lineWidth=1;for(let t=1;t<4;t++){let n=a+l*t/4;e.beginPath(),e.moveTo(o,n),e.lineTo(o+r,n),e.stroke()}if(t.length>1){e.fillStyle="#cccccc",e.font="12px Arial, sans-serif",e.textAlign="center";let n=new Date(t[0].timestamp),c=new Date(t[t.length-1].timestamp);if(e.fillText(n.toLocaleTimeString(),o,a+l+20),e.fillText(c.toLocaleTimeString(),o+r,a+l+20),t.length>10){let n=new Date(t[Math.floor(t.length/2)].timestamp);e.fillText(n.toLocaleTimeString(),o+r/2,a+l+20)}}e.fillStyle="#ffffff",e.font="12px Arial, sans-serif",e.textAlign="left",e.fillText(`Max: ${u}${s}`,o+10,a+20),e.fillText(`Min: ${d}${s}`,o+10,a+35),e.fillText(`Avg: ${Math.round(i.reduce((e,t)=>e+t,0)/i.length)}${s}`,o+10,a+50)}async function O(e){try{if(0===e.dataPoints.length)throw Error("No data available to export. Please record some activity first.");let t=await H({dataPoints:e.dataPoints,powerAverages:e.powerAverages});return new Promise((e,n)=>{t.toBlob(t=>{t?(W(t,`power_meter_summary_${C()}.png`),e()):n(Error("Failed to generate image blob"))},"image/png")})}catch(e){throw console.error("Error generating summary image:",e),e}}function W(e,t){let n=URL.createObjectURL(e),o=document.createElement("a");o.href=n,o.download=t,document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n)}function z(){let e=document.querySelector(".dashboard");if(!e)return;let t=document.querySelector(".collapsed-sections-row");t&&(t.querySelectorAll(".power-averages-section").forEach(t=>{e.parentNode.insertBefore(t,e.nextSibling)}),t.remove()),e.classList.remove("has-collapsed-sections")}let J=[],Q=[],X=[],Y=[],G=0,K=0,Z=0,ee=null,et=null;const en={get powerData(){return J},get rawPowerMeasurements(){return Q},get heartData(){return X},get cadenceData(){return Y},get lastPowerValue(){return G},get lastHeartRateValue(){return K},get lastCadenceValue(){return Z},get sessionStartTime(){return ee},getPowerAverages:function(){return{...y}},getPowerReadings:function(){return[...f]},resetAllSessionData:function(){J.length=0,X.length=0,Y.length=0,Q.length=0,v(),G=0,K=0,Z=0,ee=null,S(),p()},elements:w},eo={onPowerMeasurement:(e,t)=>{x(e),G=e,Q.push(t);let n=Date.now();f.push({timestamp:n,power:e});let o=n-54e4;f=f.filter(e=>e.timestamp>o),function(){let e=Date.now();for(let[t,n]of Object.entries({"10s":1e4,"30s":3e4,"1m":6e4,"2m":12e4,"4m":24e4,"8m":48e4})){let o=e-n,a=f.filter(e=>e.timestamp>=o);if(a.length>0){let e=Math.round(a.reduce((e,t)=>e+t.power,0)/a.length);y[t].current=e,e>y[t].best&&(y[t].best=e)}else y[t].current=0}}(),h()},onDisconnected:()=>{S(),v(),et&&(clearInterval(et),et=null),G=0},onStatusUpdate:e=>{w.statusText&&(w.statusText.textContent=e)}},ea={onHeartRateChange:e=>{w.hrValueElement&&(w.hrValueElement.textContent=e),K=e},onStatusUpdate:e=>{w.hrStatusText&&(w.hrStatusText.textContent=e)}},er={onCadenceChange:e=>{w.cadenceValueElement&&(w.cadenceValueElement.textContent=e),Z=e},onStatusUpdate:e=>{w.cadenceStatusText&&(w.cadenceStatusText.textContent=e)}};async function el(){w.powerValueElement=document.getElementById("power-value"),w.hrValueElement=document.getElementById("hr-value"),w.cadenceValueElement=document.getElementById("cadence-value"),w.deviceNameElement=document.getElementById("device-name"),w.hrDeviceName=document.getElementById("hrDeviceName"),w.cadenceDeviceName=document.getElementById("cadenceDeviceName"),w.statusText=document.getElementById("status"),w.hrStatusText=document.getElementById("hrStatus"),w.cadenceStatusText=document.getElementById("cadenceStatus"),w.hrConnectionStatus=document.getElementById("hrConnectionStatus"),w.cadenceConnectionStatus=document.getElementById("cadenceConnectionStatus"),w.powerMeterConnectButton=document.getElementById("connectButton"),w.hrConnectButton=document.getElementById("hrConnectButton"),w.speedCadenceConnectButton=document.getElementById("speedCadenceConnectButton"),w.exportButtons.json=document.getElementById("exportJsonButton"),w.exportButtons.csv=document.getElementById("exportCsvButton"),w.exportButtons.tcx=document.getElementById("exportTcxButton"),w.exportButtons.rawJson=document.getElementById("exportRawJsonButton"),w.exportButtons.rawCsv=document.getElementById("exportRawCsvButton"),w.exportButtons.image=document.getElementById("exportImageButton"),w.exportButtons.clearSession=document.getElementById("clearSessionButton"),w.toggleConnectSection=document.getElementById("toggleConnectSection"),w.toggleExportSection=document.getElementById("toggleExportSection"),w.connectSection=document.getElementById("connectSection"),w.exportSection=document.getElementById("exportSection"),w.powerAveragesSection=document.getElementById("powerAveragesSection"),w.connectToggleText=document.getElementById("connectToggleText"),w.exportToggleText=document.getElementById("exportToggleText"),w.hamburgerBtn=document.getElementById("hamburgerButton"),w.menuDropdown=document.getElementById("menuDropdown"),w.powerAveragesToggle=document.getElementById("powerAveragesToggle"),w.powerMetricToggle=document.getElementById("powerMetricToggle"),w.heartRateMetricToggle=document.getElementById("heartRateMetricToggle"),w.cadenceMetricToggle=document.getElementById("cadenceMetricToggle"),w.connectSectionToggle=document.getElementById("connectSectionToggle"),w.exportSectionToggle=document.getElementById("exportSectionToggle"),w.showInfoMenuItem=document.getElementById("showInfoMenuItem"),w.showQrCodeMenuItem=document.getElementById("showQrCodeMenuItem"),w.spyModeToggle=document.getElementById("spyModeToggle"),w.powerCard=document.querySelector(".power-card"),w.heartRateCard=document.querySelector(".hr-card"),w.cadenceCard=document.querySelector(".cadence-card"),w.spyCard=document.querySelector(".spy-card"),w.spyModeSection=document.getElementById("spyModeSection"),w.spyValueElement=document.getElementById("spy-value"),w.spyStatusElement=document.getElementById("spyStatus"),w.spyInstructionsElement=document.getElementById("spyInstructions"),w.hrConnectionStatus&&(w.hrConnectionStatus.textContent="Disconnected"),w.cadenceConnectionStatus&&(w.cadenceConnectionStatus.textContent="Disconnected"),e=document.getElementById("avg10s-current"),t=document.getElementById("avg10s-best"),n=document.getElementById("avg30s-current"),o=document.getElementById("avg30s-best"),a=document.getElementById("avg1m-current"),r=document.getElementById("avg1m-best"),l=document.getElementById("avg2m-current"),c=document.getElementById("avg2m-best"),s=document.getElementById("avg4m-current"),i=document.getElementById("avg4m-best"),d=document.getElementById("avg8m-current"),u=document.getElementById("avg8m-best"),w.connectSection&&w.connectSection.querySelectorAll("button:not(.section-toggle-button)").forEach(e=>e.style.display="block"),w.exportSection&&(w.exportSection.style.display="none"),w.powerAveragesSection&&(w.powerAveragesSection.style.display="none");let S=document.querySelector(".dashboard"),E=document.getElementById("powerAveragesSection"),b=E&&"none"===E.style.display;S&&(b?S.classList.add("maximized"):S.classList.remove("maximized")),z(),function(e){if(!e.hamburgerBtn||!e.menuDropdown)return console.error("Hamburger menu elements not found:",{hamburgerBtn:!!e.hamburgerBtn,menuDropdown:!!e.menuDropdown});e.hamburgerBtn.addEventListener("click",function(){e.menuDropdown.classList.contains("active")?e.menuDropdown.classList.remove("active"):e.menuDropdown.classList.add("active")}),document.addEventListener("click",function(t){t.target.closest(".hamburger-menu")||e.menuDropdown.classList.remove("active")})}(w),function(e){if(!e.powerAveragesToggle||!e.powerAveragesSection)return console.error("Power averages toggle elements not found:",{powerAveragesToggle:!!e.powerAveragesToggle,powerAveragesSection:!!e.powerAveragesSection});let t=!1;e.powerAveragesToggle.addEventListener("click",function(){(t=!t)?(e.powerAveragesSection.style.display="block",e.powerAveragesToggle.classList.add("active")):(e.powerAveragesSection.style.display="none",e.powerAveragesToggle.classList.remove("active")),z()})}(w);if(w.powerMetricToggle&&w.powerCard){let e=!0;w.powerMetricToggle.classList.add("active"),w.powerMetricToggle.addEventListener("click",function(){(e=!e)?(w.powerCard.style.display="block",w.powerMetricToggle.classList.add("active")):(w.powerCard.style.display="none",w.powerMetricToggle.classList.remove("active"))})}else console.error("Power metric toggle elements not found");if(w.heartRateMetricToggle&&w.heartRateCard){let e=!0;w.heartRateMetricToggle.classList.add("active"),w.heartRateMetricToggle.addEventListener("click",function(){(e=!e)?(w.heartRateCard.style.display="block",w.heartRateMetricToggle.classList.add("active")):(w.heartRateCard.style.display="none",w.heartRateMetricToggle.classList.remove("active"))})}else console.error("Heart rate metric toggle elements not found");if(w.cadenceMetricToggle&&w.cadenceCard){let e=!0;w.cadenceMetricToggle.classList.add("active"),w.cadenceMetricToggle.addEventListener("click",function(){(e=!e)?(w.cadenceCard.style.display="block",w.cadenceMetricToggle.classList.add("active")):(w.cadenceCard.style.display="none",w.cadenceMetricToggle.classList.remove("active"))})}else console.error("Cadence metric toggle elements not found");if(w.connectSectionToggle&&w.connectSection){let e=!0;w.connectSectionToggle.classList.add("active"),w.connectSectionToggle.addEventListener("click",function(){(e=!e)?(w.connectSection.style.display="block",w.connectSectionToggle.classList.add("active")):(w.connectSection.style.display="none",w.connectSectionToggle.classList.remove("active"))})}else console.error("Connect section toggle elements not found");if(w.exportSectionToggle&&w.exportSection){let e=!1;w.exportSectionToggle.addEventListener("click",function(){(e=!e)?(w.exportSection.style.display="block",w.exportSectionToggle.classList.add("active")):(w.exportSection.style.display="none",w.exportSectionToggle.classList.remove("active"))})}else console.error("Export section toggle elements not found");!function(e,t){if(!e.spyModeToggle||!e.spyModeSection)return console.error("Spy mode toggle elements not found");let n=!1;e.spyModeToggle.addEventListener("click",function(){(n=!n)?(e.spyModeSection.style.display="block",e.spyModeToggle.classList.add("active")):(e.spyModeSection.style.display="none",e.spyModeToggle.classList.remove("active"),t(),e.spyValueElement&&(e.spyValueElement.textContent="--"),e.spyStatusElement&&(e.spyStatusElement.style.display="none")),e.spyInstructionsElement&&(e.spyInstructionsElement.style.display="block")})}(w,()=>U(w)),w.showInfoMenuItem?w.showInfoMenuItem.addEventListener("click",function(){!function(){let e=document.createElement("div");e.className="modal-backdrop",e.style.cssText=`
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    `;let t=document.createElement("div");t.className="modal",t.style.cssText=`
        background: #1a1a2e;
        border-radius: 12px;
        padding: 2rem;
        max-width: 600px;
        max-height: 80vh;
        overflow-y: auto;
        margin: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
    `,t.innerHTML=`
        <div style="text-align: center; margin-bottom: 1.5rem;">
            <h2 style="color: #3498db; margin: 0 0 0.5rem 0; font-size: 1.8rem;">\u{1F6B4} Web Bluetooth Power Meter</h2>
            <p style="color: #cccccc; margin: 0; font-size: 1rem;">Real-time cycling data analysis</p>
        </div>

        <div style="color: #ffffff; line-height: 1.6;">
            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{1F4F1} What is this app?</h3>
            <p style="margin-bottom: 1rem;">
                This is a web-based power meter application that connects to Bluetooth cycling devices 
                to provide real-time power, heart rate, and cadence data analysis. Perfect for indoor 
                training, data logging, and performance tracking.
            </p>

            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{1F517} How to connect devices:</h3>
            <ol style="margin-bottom: 1rem; padding-left: 1.5rem;">
                <li><strong>Power Meter:</strong> Click "Connect Power Meter" and select your cycling power device</li>
                <li><strong>Heart Rate:</strong> Click "Connect Heart Rate" to pair your HR monitor</li>
                <li><strong>Cadence:</strong> Click "Connect Cadence" for speed/cadence sensors</li>
            </ol>

            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{1F4CA} Features:</h3>
            <ul style="margin-bottom: 1rem; padding-left: 1.5rem;">
                <li><strong>Real-time Metrics:</strong> Live power, heart rate, and cadence display</li>
                <li><strong>Power Averages:</strong> 10s, 30s, 1m, 2m, 4m, and 8m rolling averages</li>
                <li><strong>Data Export:</strong> JSON, CSV, TCX, and visual summary image formats</li>
                <li><strong>Session Persistence:</strong> Data automatically saved and restored</li>
                <li><strong>Custom Dashboard:</strong> Toggle metrics and sections via hamburger menu</li>
            </ul>

            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{2699}\u{FE0F} Using the hamburger menu:</h3>
            <ul style="margin-bottom: 1rem; padding-left: 1.5rem;">
                <li><strong>Toggle Sections:</strong> Show/hide different parts of the interface</li>
                <li><strong>Load Debug Data:</strong> Generate 1000 test data points for testing</li>
                <li><strong>Customize View:</strong> Control which metrics are visible</li>
            </ul>

            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{1F310} Browser Support:</h3>
            <p style="margin-bottom: 1rem;">
                Requires a browser with Web Bluetooth support:
                <br>\u{2022} Chrome 56+ \u{2022} Edge 79+ \u{2022} Opera 43+
            </p>

            <h3 style="color: #f39c12; margin: 1.5rem 0 1rem 0;">\u{1F4A1} Tips:</h3>
            <ul style="margin-bottom: 1.5rem; padding-left: 1.5rem;">
                <li>Make sure your devices are in pairing mode before connecting</li>
                <li>Data is automatically saved to your browser's local storage</li>
                <li>Use the export functions to save your workout data</li>
                <li>The app works offline once loaded</li>
            </ul>
        </div>

        <div style="text-align: center; margin-top: 2rem;">
            <button id="closeInfoModal" style="
                background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
                color: white;
                border: none;
                padding: 12px 24px;
                border-radius: 8px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
            ">Got it!</button>
        </div>
    `,e.appendChild(t),document.body.appendChild(e);let n=t.querySelector("#closeInfoModal"),o=()=>{document.body.removeChild(e)};n.addEventListener("click",o),e.addEventListener("click",t=>{t.target===e&&o()});let a=e=>{"Escape"===e.key&&(o(),document.removeEventListener("keydown",a))};document.addEventListener("keydown",a),n.addEventListener("mouseenter",()=>{n.style.transform="translateY(-2px)",n.style.boxShadow="0 8px 24px rgba(52, 152, 219, 0.4)"}),n.addEventListener("mouseleave",()=>{n.style.transform="translateY(0)",n.style.boxShadow="none"})}(),w.menuDropdown&&w.menuDropdown.classList.remove("active")}):console.error("Show info menu item not found"),w.showQrCodeMenuItem?w.showQrCodeMenuItem.addEventListener("click",function(){!function(){let e="https://colscoding.github.io/power-saver/",t=document.createElement("div");t.className="modal-backdrop",t.style.cssText=`
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.8);
        display: flex;
        justify-content: center;
        align-items: center;
        z-index: 1000;
    `;let n=document.createElement("div");n.className="modal",n.style.cssText=`
        background: #1a1a2e;
        border-radius: 12px;
        padding: 2rem;
        max-width: 400px;
        max-height: 80vh;
        overflow-y: auto;
        margin: 20px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        text-align: center;
    `;let o=document.createElement("canvas");o.width=256,o.height=256,o.style.cssText=`
        background: white;
        border-radius: 8px;
        margin: 1rem 0;
        max-width: 100%;
        height: auto;
    `,function(e,t){let n=e.getContext("2d"),o=e.width;n.fillStyle="#ffffff",n.fillRect(0,0,o,o);let a=`https://api.qrserver.com/v1/create-qr-code/?size=${o}x${o}&data=${encodeURIComponent(t)}`,r=new Image;r.crossOrigin="anonymous",r.onload=function(){n.drawImage(r,0,0,o,o)},r.onerror=function(){var e=n,t=o;e.fillStyle="#000000",e.font="12px Arial",e.textAlign="center";let a=t/25;for(let t=0;t<25;t++)for(let n=0;n<25;n++)((t+n)%3==0||0===t||24===t||0===n||24===n)&&e.fillRect(t*a,n*a,a,a);e.fillStyle="#ffffff",e.fillRect(.2*t,.4*t,.6*t,.2*t),e.fillStyle="#000000",e.fillText("QR Code",t/2,t/2-10),e.fillText("Unavailable",t/2,t/2+10)},r.src=a}(o,e),n.innerHTML=`
        <div style="margin-bottom: 1.5rem;">
            <h2 style="color: #9b59b6; margin: 0 0 0.5rem 0; font-size: 1.8rem;">\u{1F4F1} Share Power Meter App</h2>
            <p style="color: #cccccc; margin: 0; font-size: 1rem;">Scan to access the app on any device</p>
        </div>
        
        <div id="qr-container" style="margin: 1.5rem 0;"></div>
        
        <div style="margin: 1.5rem 0;">
            <p style="color: #ffffff; margin: 0 0 0.5rem 0; font-weight: 600;">Or visit directly:</p>
            <a href="${e}" target="_blank" style="
                color: #9b59b6; 
                text-decoration: none; 
                font-size: 0.9rem;
                word-break: break-all;
                line-height: 1.4;
            ">${e}</a>
        </div>

        <div style="text-align: center; margin-top: 2rem;">
            <button id="closeQrModal" style="
                background: linear-gradient(135deg, #9b59b6 0%, #8e44ad 100%);
                color: white;
                border: none;
                padding: 12px 24px;
                border-radius: 8px;
                font-size: 16px;
                font-weight: 600;
                cursor: pointer;
                transition: all 0.3s ease;
            ">Close</button>
        </div>
    `,n.querySelector("#qr-container").appendChild(o),t.appendChild(n),document.body.appendChild(t);let a=n.querySelector("#closeQrModal"),r=()=>{document.body.removeChild(t)};a.addEventListener("click",r),t.addEventListener("click",e=>{e.target===t&&r()});let l=e=>{"Escape"===e.key&&(r(),document.removeEventListener("keydown",l))};document.addEventListener("keydown",l),a.addEventListener("mouseenter",()=>{a.style.transform="translateY(-2px)",a.style.boxShadow="0 8px 24px rgba(155, 89, 182, 0.4)"}),a.addEventListener("mouseleave",()=>{a.style.transform="translateY(0)",a.style.boxShadow="none"})}(),w.menuDropdown&&w.menuDropdown.classList.remove("active")}):console.error("Show QR code menu item not found"),w.toggleConnectSection&&w.connectSection&&w.connectToggleText&&w.toggleConnectSection.addEventListener("click",()=>{let e=w.connectSection.querySelectorAll("button:not(.section-toggle-button)"),t=w.connectSection.querySelector(".section-header");e[0]&&"none"===e[0].style.display?(e.forEach(e=>e.style.display="block"),w.connectToggleText.textContent="Hide Connect Devices",w.toggleConnectSection.classList.remove("collapsed"),w.connectSection.classList.remove("collapsed"),t&&t.classList.remove("collapsed")):(e.forEach(e=>e.style.display="none"),w.connectToggleText.textContent="Show Connect Devices",w.toggleConnectSection.classList.add("collapsed"),w.connectSection.classList.add("collapsed"),t&&t.classList.add("collapsed"))}),w.toggleExportSection&&w.exportSection&&w.exportToggleText&&w.toggleExportSection.addEventListener("click",()=>{let e=document.getElementById("export-buttons"),t=w.exportSection.querySelector(".section-header");e&&"none"===e.style.display?(w.exportSection.style.display="block",e&&(e.style.display="flex"),w.exportToggleText.textContent="Hide Export Data",w.toggleExportSection.classList.remove("collapsed"),w.exportSection.classList.remove("collapsed"),t&&t.classList.remove("collapsed")):(e&&(e.style.display="none"),w.exportToggleText.textContent="Show Export Data",w.toggleExportSection.classList.add("collapsed"),w.exportSection.classList.add("collapsed"),t&&t.classList.add("collapsed"))}),w.powerMeterConnectButton&&w.powerMeterConnectButton.addEventListener("click",async()=>{J.length=0,Q.length=0,G=0,v(),et&&clearInterval(et),await P(eo,w)&&(ee||(ee=Date.now()),et=setInterval(()=>{J.push({timestamp:Date.now(),power:G,heartRate:K,cadence:Z}),J.length%100==0&&g(en)},100))}),w.hrConnectButton&&w.hrConnectButton.addEventListener("click",async()=>{await $(ea,w)}),w.speedCadenceConnectButton&&w.speedCadenceConnectButton.addEventListener("click",async()=>{await V(er,w)}),w.spyCard&&w.spyCard.addEventListener("click",async()=>{D&&D.gatt.connected?U(w):await N({},w)});let{elements:T}=en;T.exportButtons.json&&T.exportButtons.json.addEventListener("click",()=>{W(new Blob([JSON.stringify(en.powerData,null,2)],{type:"application/json"}),`power_data_${C()}.json`)}),T.exportButtons.csv&&T.exportButtons.csv.addEventListener("click",()=>{var e;let t;e=en.powerData,t="timestamp,power,heartRate,cadence\n",e.forEach(e=>{t+=`${e.timestamp},${e.power},${e.heartRate},${e.cadence}
`}),W(new Blob([t],{type:"text/csv;charset=utf-8;"}),`power_data_${C()}.csv`)}),T.exportButtons.rawJson&&T.exportButtons.rawJson.addEventListener("click",()=>{W(new Blob([JSON.stringify(en.rawPowerMeasurements,null,2)],{type:"application/json"}),`raw_power_measurements_${C()}.json`)}),T.exportButtons.rawCsv&&T.exportButtons.rawCsv.addEventListener("click",()=>{var e;let t;e=en.rawPowerMeasurements,t="timestamp,flags,dataLength,instantaneousPower,rawBytes\n",e.forEach(e=>{t+=`${e.timestamp},${e.flags},${e.dataLength},${e.instantaneousPower},"${e.rawBytes}"
`}),W(new Blob([t],{type:"text/csv;charset=utf-8;"}),`raw_power_measurements_${C()}.csv`)}),T.exportButtons.tcx&&T.exportButtons.tcx.addEventListener("click",()=>{try{var e=en.powerData;try{if(0===e.length)throw Error("No power data available to export.");let t=function(e){if(!Array.isArray(e)||0===e.length)return"";let t=e.filter(e=>e&&"object"==typeof e&&void 0!==e.timestamp&&!isNaN(new Date(e.timestamp).getTime()));if(0===t.length)return"";let n=t.map(e=>({time:e.timestamp,...void 0!==e.power&&{power:e.power},...void 0!==e.heartRate&&{heartRate:e.heartRate},...void 0!==e.cadence&&{cadence:e.cadence}})).sort((e,t)=>e.time-t.time),o=e=>!e.power||e.power<=0;for(;n.length>0&&o(n[0]);)n.shift();for(;n.length>0&&o(n[n.length-1]);)n.pop();if(0===n.length)return"";let a=n.map(F).join("\n"),r=new Date(n[0].time).toISOString();return`<?xml version="1.0" encoding="UTF-8"?>
<TrainingCenterDatabase
  xmlns="http://www.garmin.com/xmlschemas/TrainingCenterDatabase/v2"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://www.garmin.com/xmlschemas/TrainingCenterDatabase/v2 http://www.garmin.com/xmlschemas/TrainingCenterDatabasev2.xsd"
  xmlns:ns2="http://www.garmin.com/xmlschemas/ActivityExtension/v2">
  <Activities>
    <Activity Sport="Biking">
      <Id>${r}</Id>
      <Name>E Bike Indoor Cycling Trainer</Name>
      <Lap StartTime="${r}">
        <Track>
        ${a}
        </Track>
      </Lap>
    </Activity>
  </Activities>
</TrainingCenterDatabase>`}(e),n=new Blob([t],{type:"application/xml;charset=utf-8;"});W(n,`power_data_${C()}.tcx`)}catch(e){throw console.error("Error generating TCX:",e),e}}catch(e){alert(`Error generating TCX file: ${e.message}`)}}),T.exportButtons.image&&T.exportButtons.image.addEventListener("click",async()=>{try{await O({dataPoints:en.powerData,powerAverages:en.getPowerAverages()})}catch(e){alert(`Error generating summary image: ${e.message}`)}}),T.exportButtons.clearSession&&T.exportButtons.clearSession.addEventListener("click",()=>{confirm("Are you sure you want to clear all session data? This action cannot be undone.")&&(en.resetAllSessionData(),alert("Session data cleared successfully!"))});let B=function(){try{let e=localStorage.getItem(m);if(!e)return null;let t=JSON.parse(e);if(Date.now()-t.timestamp>864e5)return localStorage.removeItem(m),null;return t}catch(e){return console.warn("Failed to load session data:",e),localStorage.removeItem(m),null}}();B&&await new Promise(e=>{let t=document.createElement("div");t.className="modal-backdrop";let n=document.createElement("div");n.className="modal";let o=Math.round((Date.now()-B.timestamp)/6e4),a=(B.powerData?.length||0)+(B.heartData?.length||0)+(B.cadenceData?.length||0);n.innerHTML=`
      <h3>Previous Session Found</h3>
      <p>
        A previous session was found from ${o} minutes ago with ${a} data points.
      </p>
      <p>
        Would you like to restore this session or start fresh?
      </p>
      <div class="modal-buttons">
        <button id="startFresh" class="modal-button secondary">Start Fresh</button>
        <button id="restoreSession" class="modal-button primary">Restore Session</button>
      </div>
    `,t.appendChild(n),document.body.appendChild(t),n.querySelector("#startFresh").addEventListener("click",()=>{document.body.removeChild(t),p(),e(!1)}),n.querySelector("#restoreSession").addEventListener("click",()=>{document.body.removeChild(t),e(!0)}),t.addEventListener("click",n=>{n.target===t&&(document.body.removeChild(t),e(!1))})})?function(e){try{var t,n;e.powerData&&(J.length=0,J.push(...e.powerData)),e.heartData&&(X.length=0,X.push(...e.heartData)),e.cadenceData&&(Y.length=0,Y.push(...e.cadenceData)),e.rawPowerMeasurements&&(Q.length=0,Q.push(...e.rawPowerMeasurements)),e.powerReadings&&(f=[...e.powerReadings]),e.powerAverages&&(t=e.powerAverages,Object.assign(y,t),h()),void 0!==e.lastPowerValue&&(G=e.lastPowerValue),void 0!==e.lastHeartRateValue&&(K=e.lastHeartRateValue),void 0!==e.lastCadenceValue&&(Z=e.lastCadenceValue),void 0!==e.sessionStartTime&&(ee=e.sessionStartTime),void 0!==(n={power:G,heartRate:K,cadence:Z}).power&&x(n.power),void 0!==n.heartRate&&w.hrValueElement&&(w.hrValueElement.textContent=n.heartRate||"--"),void 0!==n.cadence&&w.cadenceValueElement&&(w.cadenceValueElement.textContent=n.cadence||"--"),h(),J.length>0&&function(e){let t=document.createElement("div");t.style.cssText=`
    position: fixed;
    top: 20px;
    right: 20px;
    background: #4CAF50;
    color: white;
    padding: 1rem 1.5rem;
    border-radius: 8px;
    z-index: 1000;
    font-size: 0.9rem;
    box-shadow: 0 4px 12px rgba(0,0,0,0.3);
    animation: slideIn 0.3s ease-out;
  `,t.textContent=`Session restored! ${e} data points recovered.`;let n=document.createElement("style");n.textContent=`
    @keyframes slideIn {
      from { transform: translateX(100%); opacity: 0; }
      to { transform: translateX(0); opacity: 1; }
    }
  `,document.head.appendChild(n),document.body.appendChild(t),setTimeout(()=>{t.style.animation="slideIn 0.3s ease-out reverse",setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t),n.parentNode&&n.parentNode.removeChild(n)},300)},5e3)}(J.length)}catch(e){return console.warn("Failed to restore session data:",e),!1}}(B):ee=Date.now(),window.addEventListener("beforeunload",function(){J.length>0&&g(en)}),setInterval(()=>{J.length>0&&g(en)},3e4)}document.addEventListener("DOMContentLoaded",el);
//# sourceMappingURL=power-saver.41ed3745.js.map
