(()=>{var e=globalThis,r={},t={},n=e.parcelRequire7677;null==n&&((n=function(e){if(e in r)return r[e].exports;if(e in t){var n=t[e];delete t[e];var i={id:e,exports:{}};return r[e]=i,n.call(i.exports,i,i.exports),i.exports}var o=Error("Cannot find module '"+e+"'");throw o.code="MODULE_NOT_FOUND",o}).register=function(e,r){t[e]=r},e.parcelRequire7677=n),(0,n.register)("ezAIq",function(e,r){let t="power-meter-static-v1",n="power-meter-dynamic-v1",i=["./","./index.html"];self.addEventListener("install",e=>{console.log("[Service Worker] Installing..."),e.waitUntil(caches.open(t).then(e=>(console.log("[Service Worker] Caching static assets"),e.addAll(i))).then(()=>(console.log("[Service Worker] Skip waiting"),self.skipWaiting())).catch(e=>{console.error("[Service Worker] Installation failed:",e)}))}),self.addEventListener("activate",e=>{console.log("[Service Worker] Activating..."),e.waitUntil(caches.keys().then(e=>Promise.all(e.map(e=>{if(e!==t&&e!==n)return console.log("[Service Worker] Deleting old cache:",e),caches.delete(e)}))).then(()=>(console.log("[Service Worker] Claiming clients"),self.clients.claim())))}),self.addEventListener("fetch",e=>{"GET"===e.request.method&&e.request.url.startsWith("http")&&e.respondWith(caches.match(e.request).then(r=>r?(console.log("[Service Worker] Serving from cache:",e.request.url),r):fetch(e.request.clone()).then(r=>{if(!r||200!==r.status||"error"===r.type)return r;let t=r.clone();return caches.open(n).then(r=>{console.log("[Service Worker] Caching new resource:",e.request.url),r.put(e.request,t)}),r}).catch(e=>(console.error("[Service Worker] Fetch failed:",e),caches.match("./index.html")))))}),self.addEventListener("message",e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})}),n("ezAIq")})();
//# sourceMappingURL=service-worker.js.map
